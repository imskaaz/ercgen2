{"remainingRequest":"C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\breze\\Desktop\\ercgen\\.vuepress\\components\\Generator.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\breze\\Desktop\\ercgen\\.vuepress\\components\\Generator.vue","mtime":1581174957178},{"path":"C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/breze/Desktop/ercgen/.vuepress/components/Generator.vue"],"names":["dapp","name","mixins","data","loading","currentNetwork","trxHash","makingTransaction","formDisabled","token","enableTransfer","mounted","getParam","network","default","initDapp","methods","current","list","initWeb3","initToken","alert","document","location","href","$withBase","generateToken","$refs","observer","validate","then","result","metamask","installed","netId","id","symbol","toUpperCase","decimals","web3","BigNumber","cap","mul","Math","pow","initialBalance","legacy","web3Provider","enable","setTimeout","contracts","new","from","eth","coinbase","bytecode","e","tokenContract","address","transactionHash","trxLink","etherscanLink","link","$forceUpdate","catch","console","log","param","vars","window","replace","hash","m","key","value","undefined"],"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport dapp from '../mixins/dapp';\n\nexport default {\n  name: 'Generator',\n  mixins: [\n    dapp,\n  ],\n  data () {\n    return {\n      loading: true,\n      currentNetwork: null,\n      trxHash: '',\n      makingTransaction: false,\n      formDisabled: false,\n      token: {},\n      enableTransfer: true,\n    };\n  },\n  mounted () {\n    this.currentNetwork = this.getParam('network') || this.network.default;\n    this.initDapp();\n  },\n  methods: {\n    async initDapp () {\n      this.network.current = this.network.list[this.currentNetwork];\n      try {\n        await this.initWeb3(this.currentNetwork, true);\n        this.initToken();\n        this.loading = false;\n      } catch (e) {\n        alert(e);\n        document.location.href = this.$withBase('/');\n      }\n    },\n    async generateToken () {\n      this.$refs.observer.validate().then(async (result) => {\n        if (result) {\n          if (!this.metamask.installed) {\n            alert('To create a Token please install MetaMask!');\n            return;\n          } else {\n            if (this.metamask.netId !== this.network.current.id) {\n              alert(`Your MetaMask in on the wrong network. Please switch on ${this.network.current.name} and try again!`);\n              return;\n            }\n          }\n\n          const name = this.token.name;\n          const symbol = this.token.symbol.toUpperCase();\n          const decimals = new this.web3.BigNumber(this.token.decimals);\n          const cap = new this.web3.BigNumber(this.token.cap).mul(Math.pow(10, this.token.decimals));\n          const initialBalance = new this.web3.BigNumber(this.token.initialBalance).mul(Math.pow(10, this.token.decimals)); // eslint-disable-line max-len\n          const enableTransfer = this.enableTransfer;\n\n          try {\n            this.trxHash = '';\n            this.formDisabled = true;\n            this.makingTransaction = true;\n\n            if (!this.legacy) {\n              await this.web3Provider.enable();\n            }\n\n            setTimeout(() => {\n              this.contracts.token.new(\n                name,\n                symbol,\n                decimals,\n                cap,\n                initialBalance,\n                enableTransfer,\n                {\n                  from: this.web3.eth.coinbase,\n                  data: this.contracts.token.bytecode,\n                }, (e, tokenContract) => {\n                  if (e) {\n                    this.makingTransaction = false;\n                    this.formDisabled = false;\n                  } else {\n                    // NOTE: The callback will fire twice!\n                    // Once the contract has the transactionHash property\n                    // set and once its deployed on an address.\n                    if (!tokenContract.address) {\n                      this.trxHash = tokenContract.transactionHash;\n                      this.trxLink = this.network.current.etherscanLink + '/tx/' + this.trxHash;\n                    } else {\n                      this.token.address = tokenContract.address;\n                      this.token.link = this.network.current.etherscanLink + '/token/' + this.token.address;\n                      this.$forceUpdate();\n                    }\n                  }\n                },\n              );\n            }, 500);\n          } catch (e) {\n            this.makingTransaction = false;\n            this.formDisabled = false;\n            alert('Some error occurred. Maybe you rejected the transaction or you have MetaMask locked!');\n          }\n        }\n      }).catch((e) => {\n        console.log(e); // eslint-disable-line no-console\n        this.makingTransaction = false;\n        alert('Some error occurred.');\n      });\n    },\n    getParam (param) {\n      const vars = {};\n      window.location.href.replace(location.hash, '').replace(\n        /[?&]+([^=&]+)=?([^&]*)?/gi, // regexp\n        function (m, key, value) { // callback\n          vars[key] = value !== undefined ? value : '';\n        },\n      );\n\n      if (param) {\n        return vars[param] ? vars[param] : null;\n      }\n      return vars;\n    },\n  },\n};\n"]}]}