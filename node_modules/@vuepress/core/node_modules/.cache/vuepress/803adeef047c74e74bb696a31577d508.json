{"remainingRequest":"C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\breze\\Desktop\\ercgen\\.vuepress\\components\\Docs.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\breze\\Desktop\\ercgen\\.vuepress\\components\\Docs.vue","mtime":1577190872000},{"path":"C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\breze\\Desktop\\ercgen\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkYXBwIGZyb20gJy4uL21peGlucy9kYXBwJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRG9jcycsCiAgbWl4aW5zOiBbCiAgICBkYXBwLAogIF0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICBjdXJyZW50TmV0d29yazogbnVsbCwKICAgIH07CiAgfSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMuY3VycmVudE5ldHdvcmsgPSB0aGlzLm5ldHdvcmsuZGVmYXVsdDsKICAgIHRoaXMuaW5pdERhcHAoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGluaXREYXBwICgpIHsKICAgICAgdGhpcy5uZXR3b3JrLmN1cnJlbnQgPSB0aGlzLm5ldHdvcmsubGlzdFt0aGlzLmN1cnJlbnROZXR3b3JrXTsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCB0aGlzLmluaXRXZWIzKHRoaXMuY3VycmVudE5ldHdvcmssIHRydWUpOwogICAgICAgIHRoaXMuaW5pdFRva2VuKCk7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBhbGVydChlKTsKICAgICAgICBkb2N1bWVudC5sb2NhdGlvbi5ocmVmID0gdGhpcy4kd2l0aEJhc2UoJy8nKTsKICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Docs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Docs.vue","sourceRoot":".vuepress/components","sourcesContent":["<template>\n    <b-row>\n        <b-col lg=\"10\" offset-lg=\"1\" class=\"mt-4 p-0\" v-if=\"!loading\">\n            <b-card bg-variant=\"light\" title=\"Token Details\">\n                <ul>\n                    <li>\n                        Source Code:\n                        <b-link href=\"https://github.com/vittominacori/erc20-generator/blob/v2.4.3/dist/ERC20Token.dist.sol\"\n                                target=\"_blank\">\n                            <b>ERC20Token.dist.sol</b>\n                        </b-link>\n                    </li>\n                    <li>Contract Name: <b>{{ contracts.token.contractName }}</b></li>\n                    <li>Compiler: <b>{{ contracts.token.compiler.version }}</b></li>\n                    <li>Optimization: <b>Yes</b></li>\n                    <li>Runs (Optimizer): <b>200</b></li>\n                    <li>Constructor Arguments: <b>your ABI-encoded arguments</b></li>\n                </ul>\n                <div class=\"form-group\">\n                    <label><b>ABI</b></label>\n                    <textarea class=\"form-control\"\n                              readonly=\"readonly\" rows=\"5\"\n                              v-model=\"contracts.token.stringifiedAbi\"></textarea>\n                </div>\n            </b-card>\n            <b-card bg-variant=\"light\" title=\"Token documentation\" class=\"mt-4\">\n                <b-card-text>\n                    Your token will have the following properties: <br><br>\n                    <ul>\n                        <li><b>Detailed ERC20 Token</b>: <br>your token will be fully compliant with ERC20\n                            definition and compatible with any ERC20 wallet all around the world.\n                            It will have a name, a symbol and a decimals amount.\n                        </li>\n                        <li><b>ERC1363 Payable Token</b>: <br>the ERC1363 is an ERC20 compatible token that\n                            can make a callback on the receiver contract to notify token transfers or token approvals.\n                            <b-link target=\"_blank\" href=\"https://vittominacori.github.io/erc1363-payable-token\">\n                                Discover more\n                            </b-link>\n                        </li>\n                        <li><b>Mintable Token</b>: <br>you will be able to generate tokens by minting them.\n                            Only people (or smart contract) with <i>Minter</i> role will be able to do that,\n                            and you can also add or remove the Minter role to addresses.\n                        </li>\n                        <li><b>Capped Token</b>: <br>you canâ€™t be able to mint more than the defined token cap.\n                            This ensure people that you will not generate more tokens than declared.\n                        </li>\n                        <li><b>Burnable Token</b>: <br>your token can be burnt. It means that you can choose to\n                            reduce the circulating supply by destroying some of your tokens.\n                        </li>\n                        <li><b>Token Recover</b>: <br>it allows the contract owner to recover any ERC20 token\n                            sent into the contract for error.\n                        </li>\n                    </ul>\n                    <b-alert show variant=\"warning\">\n                        <strong>\n                            NOTE: If you don't enable transfer during  deploy, tokens won't be transferable\n                            until you call the <i>enableTransfer</i> function.\n                        </strong><br>\n                        Only people (or smart contract) with <i>Operator</i> role will be able to transfer tokens.<br>\n                        Contract creator will be Operator by default, so he can transfer tokens also when transfer\n                        is not enabled.<br>You can also add or remove the Operator role to addresses.<br>\n                        This is because, by business choices, you may decide not to enable transfer until a\n                        specific time.\n                    </b-alert>\n                </b-card-text>\n            </b-card>\n            <b-card bg-variant=\"light\" title=\"Methods\" class=\"mt-4\">\n                <b-card v-for=\"(method, methodName) in contracts.token.devdoc.methods\" :title=\"methodName\"\n                        :sub-title=\"method.details\" :key=\"methodName\" class=\"mt-4\">\n                    <b-card-text v-if=\"method.return\">\n                        <b>Returns:</b> {{ method.return }}\n                    </b-card-text>\n                    <b-card-text v-if=\"method.params\">\n                        <b>Params:</b>\n                        <ul>\n                            <li v-for=\"(param, paramName) in method.params\" :key=\"paramName\">\n                                <b>{{ paramName }}:</b> {{ param }}\n                            </li>\n                        </ul>\n                    </b-card-text>\n                </b-card>\n            </b-card>\n        </b-col>\n    </b-row>\n</template>\n\n<script>\n  import dapp from '../mixins/dapp';\n\n  export default {\n    name: 'Docs',\n    mixins: [\n      dapp,\n    ],\n    data () {\n      return {\n        loading: true,\n        currentNetwork: null,\n      };\n    },\n    mounted () {\n      this.currentNetwork = this.network.default;\n      this.initDapp();\n    },\n    methods: {\n      async initDapp () {\n        this.network.current = this.network.list[this.currentNetwork];\n        try {\n          await this.initWeb3(this.currentNetwork, true);\n          this.initToken();\n          this.loading = false;\n        } catch (e) {\n          alert(e);\n          document.location.href = this.$withBase('/');\n        }\n      },\n    },\n  };\n</script>\n"]}]}